*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

/* Basis for colour palette comes from 1bit Monitor Glow Palette by Polyducks */
/* https://lospec.com/palette-list/1bit-monitor-glow */
/* you're welcome to change the colours if you want or any of the other general page style */

/* adjusted the colour palette of this page to a natural, soft palette, full of greens and beige. */

:root{
  --col-01:#D9D2B0;
  --col-02:#F3F4ED;
  --col-03:#379D72;
  --col-04:#E2F8E0;
  --col-05: #0e5b3b;
  --border: 2px solid var(--col-05);
}

.video-player-wrapper{
  display: flex;
  flex-direction: column;
  width: 50%;
  margin: 0 auto;
  border: var(--col-05);
}

body {
  background-color: var(--col-01)
}

/* because I want to overlay the play icon on the video they need to be in their own wrapper */
.video-element-wrapper{
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  
}

.video-element-wrapper:hover {
cursor: pointer;
}


#videoElement{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

#videoPlayOverlay{
  width: 8rem;
  height: 8rem;
  grid-column: 1/2;
  grid-row: 1/2;
  justify-self: center;
  align-self: center;
  opacity: 0.6;
  display: none;
}

.video-controls-wrapper{
  display: flex;
  justify-content: center;
  border: var(--border);
}
/* this overwrites the above display:flex - something which is then undone when the JS loads */
#controlsWrapper{
  display: none;
}

.video-control-button{
  width: 2rem;
  height: 2rem;
  padding: .1rem;
  border: none;
  cursor: pointer;
  background-color: var(--col-04);
}
.video-control-button:hover{
  background-color: var(--col-03);
}
.video-control-button:active{
  background-color: var(--col-03);
}
.button-icon{
  pointer-events: none;
}

#playButton{
  background-image: url('./icons/play.svg');
}

.video-progress-bar{
  /* Reset the default appearance */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 2rem;
  flex-grow: 1;
  cursor: pointer;
  background-color: var(--col-01);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-moz-progress-bar {
  background-color: var(--col-05);
}

::-webkit-progress-bar {
  background-color: var(--col-05);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-webkit-progress-value {
  background-color: var(--col-03);
}

.timeline-loading{
  background-image: -moz-repeating-linear-gradient(45deg, var(--col-03) 0% 2%, transparent 2% 4%, red 4%);
  background-size: 200% 100%;
  animation: loadingAnimation 4s linear infinite;
}

@keyframes loadingAnimation {
  100%{
    background-position: 50% 0%;
  }
}

#muteButton {
  background-image: url(./icons/mute.svg);
}


#unmuteButton {
  background-image: url(./icons/unmute.svg);
}


#fullScreen {
  background-image: url(./icons/fullScreen.svg);
}

/* Here I added an alternative image to appear when hovering over the full screen button, 
informing the user exactly what would happen if clicked. */

#fullScreen:hover {
  background-image: url(./icons/fullScreenhover.svg);
  background-size: 90%;
  background-position: center;
  background-repeat: no-repeat;

}

